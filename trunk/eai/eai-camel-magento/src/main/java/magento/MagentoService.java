package magento;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.7
 * 2013-12-02T22:19:59.270-02:00
 * Generated source version: 2.7.7
 * 
 */
@WebServiceClient(name = "MagentoService", 
                  wsdlLocation = "file:/C:/Users/Julio/Documents/workspace-puc/eai-camel-magento/src/main/resources/wsdl/wsi_soap.wsdl",
                  targetNamespace = "urn:Magento") 
public class MagentoService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("urn:Magento", "MagentoService");
    public final static QName MageApiModelServerWsiHandlerPort = new QName("urn:Magento", "Mage_Api_Model_Server_Wsi_HandlerPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/Julio/Documents/workspace-puc/eai-camel-magento/src/main/resources/wsdl/wsi_soap.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(MagentoService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/Julio/Documents/workspace-puc/eai-camel-magento/src/main/resources/wsdl/wsi_soap.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public MagentoService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public MagentoService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MagentoService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns MageApiModelServerWsiHandlerPortType
     */
    @WebEndpoint(name = "Mage_Api_Model_Server_Wsi_HandlerPort")
    public MageApiModelServerWsiHandlerPortType getMageApiModelServerWsiHandlerPort() {
        return super.getPort(MageApiModelServerWsiHandlerPort, MageApiModelServerWsiHandlerPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MageApiModelServerWsiHandlerPortType
     */
    @WebEndpoint(name = "Mage_Api_Model_Server_Wsi_HandlerPort")
    public MageApiModelServerWsiHandlerPortType getMageApiModelServerWsiHandlerPort(WebServiceFeature... features) {
        return super.getPort(MageApiModelServerWsiHandlerPort, MageApiModelServerWsiHandlerPortType.class, features);
    }

}
